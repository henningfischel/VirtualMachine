code_block ::= ("func" function) | ("while" while) | ("for" for) | ("if" if) | lines | ;
if ::=  ("(" or ")" "{" code_block "}" code_block) | ("(" or ")" "{" code_block "}");
while ::= ("(" or ")" "{" code_block "}" code_block) | ("(" or ")" "{" code_block "}");
for ::= ("(" assign ";" or ";" assign ")" "{" code_block "}" code_block) | ("(" assign ";" or ";" assign ")" "{" code_block "}");
function ::= (VARIABLE_REFERENCE "(" args_dec "{" code_block "}" code_block) | (VARIABLE_REFERENCE "(" args_dec "{" code_block "}") ;
lines ::= (line ";" code_block) | (line ";");
line ::= assign | print | or | ret;
print ::= "print" "(" or ")";
assign ::= ref "=" or;
args_dec ::= (ref "," args_dec) | ( ref ")");
args ::= (or "," args) | or;
ret ::= ("return" or ";") | ("return" or);
or ::= (and "||" or) | and;
and ::= (equality "&&" and) | equality;
equality ::= (comparison ("=="|"!=") equality) | comparison;
comparison ::= (sum (">"|"<"|"<="|">=") comparison) | sum;
sum ::= (product ("-"|"+") sum) | product;
product ::= (unary ("*"|"/"|"%") product) | unary;
unary ::= (("-"|"!") unary) | item;
item ::= func_call | ("(" or ")") | const | ref;
func_call ::= VARIABLE_REFERENCE "(" args ")";
const ::= CONSTANT;
ref ::= VARIABLE_REFERENCE;